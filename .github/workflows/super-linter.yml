---
name: Lint

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
jobs:
  super-lint:
    name: "Lint and Format Code"
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: "Checkout Code"
        uses: actions/checkout@v4
        with:
          # Fetch the full history to properly analyze changes
          fetch-depth: 0

      # Step 2: Run the Super-Linter Action
      # This is the core step that performs the linting and formatting.
      - name: "Run Super-Linter"
        uses: super-linter/super-linter@v8.0.0
        env:
          # REQUIRED: The GitHub token is necessary for the linter to interact with the repository
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # --- LINTER BEHAVIOR CONFIGURATION ---
          # Run the linter against the entire codebase, not just changed files
          VALIDATE_ALL_CODEBASE: true
          AUTO_ADD: true
          IGNORE_GITIGNORED_FILES: true

          # --- LANGUAGE VALIDATION ---
          # Enable validation for all the languages you use
          FIX_CSS: true
          FIX_CSS_PRETTIER: true
          FIX_HTML_PRETTIER: true
          FIX_JAVASCRIPT_ES: true
          FIX_JAVASCRIPT_PRETTIER: true
          FIX_JSON: true
          FIX_JSON_PRETTIER: true
          FIX_MARKDOWN: true
          FIX_MARKDOWN_PRETTIER: true
          FIX_PYTHON_BLACK: true
          
          

          # --- CONFIGURATION FILE PATH ---
          # Tell the linter where to find your custom configuration files
          LINTER_RULES_PATH: .github/linters
          # Use our custom prettier config file
          PRETTIER_CONFIG_FILE: .prettierrc.json
          # Use our custom pyproject.toml for Python's Black formatter
